# all paths are relative to yaml/execution?
# TODO: naming/structure will need to be improved
overall:
  name: 'cats vs dogs'
  #verbosity: 0
  print_graph_spec: True
  #tf_log_level: 'warn' # TODO: use
  # will need to investigate disabling cudnn > nondeterministic backprop
  #deterministic: null # not currently possible
  #rand_seed: 42 # TODO: use
  # regression, segmentation, GAN, autoencode
  type: 'classification' # TODO: use
  options: 'binary'
  #report_level: 1 # use to print model arch (output size)
  trace: 'full'
  # performance:
  #   # default (auc, acc,loss)
  #   eval:
  #     - 'sensitivity'
  #     - 'precision'
  #     - 'F1'
data:
  in_dim: [150, 150, 3]
  output_dim: [1]
  TFR_dir: './example/cats_v_dogs_01/data/record_holder/150'
  # reshape_in_to: null
  # directory: null
  # TODO: train/val/test split, kfold?
  # TODO: augmentation?
  # TODO: preprocessing
saver:
  # pickel-ed-params
  save_pparams: 'best_params' # required
  #load_pparams: null
  #save_graph: null
  # if load model, then the architecture+implementation is void
  #load_graph: null
tensorboard:
  # if null, a default location will be created/selected
  log_dir: 'trial_01'
hyper_parameters:
  lr: 0.00001
  batch_size: 16
  epochs: 12 # for quick testing
architecture:
  # if yaml, then ignore the rest
  # type, size, details(filter), frozen, dropout, regularization, etc..
  # TODO: maybe this could also be a .py file containing a graph
  # > (clear input/output would need to be defined)
  yaml: './example/cats_v_dogs_01/architecture.yaml'
  #yaml: 'architecture.yaml'
implementation:
  # TODO: will have 'sane' defaults
  optimizer: 'adam'
  #initialization: null
  default_activation: 'elu'
  shuffle_buffer: 128
train:
  # the values aren't being used yet...
  image_standardize: True
  # augmentation: # TODO: use
  #   aug_val: True
  #   v_flip: True
  #   h_flip: True
  #   #rotate: 0
  #   max_brightness: 0.2
