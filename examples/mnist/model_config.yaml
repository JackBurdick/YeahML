# all paths are relative to yaml/execution?
# TODO: naming/structure will need to be improved
overall:
  name: 'mnist'
  loss_fn: 'softmax'
  experiment_dir: 'trial_01' # will make + /best_params/ and + /tf_logs/ + /yf_logs/
  saver:
    save_params_name: "best_params_saver"
    # load_params_path: "./examples/mnist/saved_params/best_params/best_params_ckpt.ckpt" # default location to load parameters from for transfer learning
  # trace: Null
  logging:
    console:
      level: 'critical'
      format_str: null
    file:
      level: 'debug'
      format_str: null
    graph_spec: True
  metrics: 
    type: 'classification'
  num_classes: 10
data:
  in: 
    dim: [784]
    dtype: 'float32'
    reshape_to: [28, 28, 1]
  label:
    dim: [10]
    dtype: 'float32'
    one_hot: True
  TFR_parse:
    feature:
      name: "/image"
      dtype: "int8"
      tftype: "fixedlenfeature"
      in_type: "string"
    label:
      name: "/label"
      dtype: "int64" # what to decode it to
      tftype: "fixedlenfeature"
      in_type: "int64" # what it is encoded as
  TFR:
    dir: './examples/mnist/data/'
    train: 'train.tfrecords'
    validation: 'validation.tfrecords'
    test: 'test.tfrecords'
hyper_parameters:
  optimizer: 'adam'
  lr: 0.0001
  batch_size: 32
  epochs: 30
  default_activation: 'elu'
  shuffle_buffer: 128
  # early_stopping:
  #   epochs: 3
  #   warm_up_epochs: 5
hidden:
  # TODO: maybe this could also be a .py file containing a graph
  # > (clear input/output would need to be defined)
  path: './examples/mnist/hidden_config.yaml'
# train:
#   image_standardize: True
  # augmentation:
  #   aug_val: True
  #   v_flip: True
  #   h_flip: True
  #   #rotate: 0
  #   max_brightness: 0.2

# todo implement
# advanced:
#   resources:
#     GPU_thresh: 0.9